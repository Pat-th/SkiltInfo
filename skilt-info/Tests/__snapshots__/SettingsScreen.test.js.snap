// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SettingsScreen /> Renders correctly 1`] = `
<View
  style={
    Object {
      "margin": 10,
    }
  }
>
  <View
    style={
      Object {
        "padding": 5,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "rgba(0,0,0,1)",
            "fontSize": 24,
            "fontWeight": "500",
            "textAlign": "left",
          }
        }
      >
        Filter
      </Text>
      <Image
        source={1}
        style={
          Object {
            "height": 15,
            "left": 80,
            "marginTop": 10,
            "position": "absolute",
            "right": 10,
            "width": 15,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "height": 0,
          "overflow": "hidden",
        }
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "justifyContent": "center",
            "padding": 10,
          }
        }
      >
        <View>
          <View
            style={
              Object {
                "borderRadius": 10,
                "borderWidth": 1,
                "justifyContent": "center",
                "margin": 3,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#f2cfc2",
                  "borderRadius": 10,
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  Object {
                    "padding": 5,
                    "textAlign": "left",
                  }
                }
              >
                Enkel
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "borderRadius": 10,
                "borderWidth": 1,
                "justifyContent": "center",
                "margin": 3,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 10,
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  Object {
                    "padding": 5,
                    "textAlign": "left",
                  }
                }
              >
                Avansert
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "borderRadius": 10,
                "borderWidth": 1,
                "justifyContent": "center",
                "margin": 3,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 10,
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  Object {
                    "padding": 5,
                    "textAlign": "left",
                  }
                }
              >
                Fullstendig
              </Text>
            </View>
          </View>
          <RCTScrollView
            data={Array []}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View />
          </RCTScrollView>
          <View
            style={
              Object {
                "borderRadius": 10,
                "borderWidth": 1,
                "justifyContent": "center",
                "margin": 3,
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  Object {
                    "padding": 5,
                    "textAlign": "left",
                  }
                }
              >
                Legg til nytt filter
              </Text>
              <Image
                source={1}
                style={
                  Object {
                    "height": 20,
                    "marginTop": 4,
                    "position": "absolute",
                    "right": 10,
                    "width": 20,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "padding": 5,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "rgba(0,0,0,1)",
          "fontSize": 24,
          "fontWeight": "500",
          "textAlign": "left",
        }
      }
    >
      Radius
    </Text>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "position": "absolute",
          "right": 10,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        keyboardType="numeric"
        onChangeText={[Function]}
        rejectResponderTermination={true}
        style={
          Object {
            "borderBottomColor": "#a38e8c",
            "borderBottomWidth": 0.8,
            "fontSize": 24,
            "height": 30,
            "textAlign": "center",
            "width": 60,
          }
        }
        underlineColorAndroid="transparent"
        value="500"
      />
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 30,
            "margin": 10,
            "opacity": 1,
            "width": 50,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "height": 25,
              "marginTop": 3,
              "width": 25,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "padding": 5,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "rgba(0,0,0,1)",
          "fontSize": 24,
          "fontWeight": "500",
          "textAlign": "left",
        }
      }
    >
      Skilttype
    </Text>
    <View
      style={
        Object {
          "height": 50,
          "position": "absolute",
          "right": 10,
          "width": 150,
        }
      }
    >
      <RCTPicker
        items={
          Array [
            Object {
              "label": "Forkjørsveg",
              "textColor": undefined,
              "value": "7644",
            },
            Object {
              "label": "Vikeplikt",
              "textColor": undefined,
              "value": "7642",
            },
            Object {
              "label": "Gangfelt",
              "textColor": undefined,
              "value": "7705",
            },
          ]
        }
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        selectedIndex={0}
        style={
          Array [
            Object {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;
